{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * BuyBee repository module to encapsulate all of the AJAX requests that can be sent for BuyBee.\n *\n * @module      profilefield_learningstyles\n * @copyright   2024 David Herney @ BambuCo - https://bambuco.co\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Ajax from 'core/ajax';\nimport Log from 'core/log';\nimport {get_strings as getStrings} from 'core/str';\n\n// Global variables.\nvar defaultContainer = '#profilefield_learningstyles-index';\nvar questionStructure = [];\n\n// Load strings.\nvar strings = [\n    {key: 'info'},\n    {key: 'errorsaving', component: 'profilefield_learningstyles'},\n    {key: 'nomorecourses', component: 'profilefield_learningstyles'},\n];\nvar s = [];\n\n/**\n * Load strings from server.\n */\nfunction loadStrings() {\n\n    strings.forEach(one => {\n        s[one.key] = one.key;\n    });\n\n    getStrings(strings).then(function(results) {\n        var pos = 0;\n        strings.forEach(one => {\n            s[one.key] = results[pos];\n            pos++;\n        });\n        return true;\n    }).fail(function(e) {\n        Log.debug('Error loading strings');\n        Log.debug(e);\n    });\n}\n// End of Load strings.\n\n/**\n * Initialize the general controls.\n *\n * @param {object} structureJSON The structure of the test.\n */\nexport const init = async (structureJSON) => {\n\n    questionStructure = JSON.parse(structureJSON);\n\n    loadStrings();\n\n    var currentpage = 0;\n    var currentview = 'fys';\n    var $maincontainer = $(defaultContainer);\n    var $progressinner = $maincontainer.find('#progressinner');\n    var $toleft = $maincontainer.find('#controlbar .toleft');\n    var $toright = $maincontainer.find('#controlbar .toright');\n    var $viewslistglobal = $maincontainer.find('#viewslistglobal');\n\n    var moving = false;\n\n    var $allpages = [];\n\n    var i = 0;\n    $maincontainer.find('#pageslist .onepage').each(function() {\n        var $thispage = $(this);\n\n        $allpages.push($thispage);\n\n        if ($thispage.hasClass('active')) {\n            currentpage = i;\n        }\n        i++;\n\n        $thispage.find('.questionoptions button').on('click', function() {\n            var $button = $(this);\n            var $container = $button.parents('.questionoptions');\n            var type = $button.data('type');\n\n            $maincontainer.find('.onepage[data-index=\"' + $thispage.data('index') + '\"] .checked').removeClass('checked');\n            $container.find('.option' + type).addClass('checked');\n\n            setTimeout(function() {\n                $toright.trigger('click');\n            }, 400);\n\n        });\n    });\n\n    var getCurrentPage = function() {\n        var $current = $allpages[currentpage];\n        return $current;\n    };\n\n    var changeView = function(viewkey) {\n        currentview = viewkey;\n        $maincontainer.find('.eachview').hide();\n        $maincontainer.find('.eachview[data-view=\"' + viewkey + '\"]').show();\n\n        $viewslistglobal.find('li').removeClass('active');\n        $viewslistglobal.find('li[data-changeview=\"' + viewkey + '\"]').addClass('active');\n\n    };\n\n    var setBoard = function() {\n\n        var $current = getCurrentPage();\n\n        if ($current.data('type') == 'info') {\n            $maincontainer.find('#testfooter').hide();\n            $viewslistglobal.hide();\n        } else {\n            $maincontainer.find('#testfooter').show();\n            $viewslistglobal.show();\n        }\n\n        if (currentpage == 0) {\n            $toleft.hide();\n        } else {\n            $toleft.show();\n        }\n\n        if ((currentpage + 1) >= $allpages.length) {\n            $toright.hide();\n        } else {\n            if ($current.find('.testquestion').length == 0 || $current.find('.questionoptions .checked').length > 0) {\n                $toright.show();\n            } else {\n                $toright.hide();\n            }\n        }\n\n        var percent = currentpage * 100 / $allpages.length;\n        $progressinner.css('width', percent + '%');\n\n        if ($current.find('.test-results, .stylefeedback').length > 0) {\n            drawResults(defaultContainer);\n        }\n\n    };\n\n    $toleft.on('click', function(e) {\n        e.preventDefault();\n\n        if (currentpage == 0 || moving) {\n            return;\n        }\n\n        moving = true;\n\n        var $current = getCurrentPage();\n\n        $current.hide();\n        currentpage--;\n        $current = getCurrentPage();\n        $current.show();\n        moving = false;\n        setBoard();\n        location.hash = '';\n        location.hash = \"#pageslist\";\n    });\n\n    $toright.on('click', function(e) {\n        e.preventDefault();\n\n        if ((currentpage + 1) == $allpages.length || moving) {\n            return;\n        }\n\n        var $current = getCurrentPage();\n\n        moving = true;\n        $current.hide();\n        currentpage++;\n        $current = getCurrentPage();\n        $current.show();\n        moving = false;\n        setBoard();\n        location.hash = '';\n        location.hash = \"#pageslist\";\n    });\n\n    $maincontainer.find('[data-go]').on('click', function(e) {\n        e.preventDefault();\n\n        var action = $(this).data('go');\n        switch (action) {\n            case 'next':\n                $toright.trigger('click');\n                break;\n            case 'previous':\n                $toleft.trigger('click');\n                break;\n            default:\n                if (!isNaN(action) && !isNaN(parseInt(action))) {\n                    moving = true;\n                    var $current = getCurrentPage();\n                    $current.hide(200, function() {\n                        // Change the current page.\n                        currentpage = parseInt(action);\n                        $current = getCurrentPage();\n                        $current.show(200, function() {\n                            moving = false;\n                        });\n                        setBoard();\n                    });\n                }\n        }\n    });\n\n    $maincontainer.find('.test-btns-save[data-sesskey]').on('click', function() {\n\n        var answers = getAnswers();\n        var sesskey = $(this).data('sesskey');\n\n        saveInfo(answers, sesskey, function() { $toright.trigger('click'); });\n\n    });\n\n    $maincontainer.find('[data-changeview]').on('click', function(e) {\n        e.preventDefault();\n\n        var viewkey = $(this).data('changeview');\n        changeView(viewkey);\n    });\n\n    setBoard();\n    changeView(currentview);\n};\n\n/**\n * Show a message in a modal.\n *\n * @param {string} message\n * @param {string} type The message type: info, help.\n * @param {function} callback\n * @returns\n */\nvar showMessage = (message, type = 'info', callback = null) => {\n\n    let modalTitle = '';\n    let content = message;\n\n    switch (type) {\n        case 'info':\n            modalTitle = s.info;\n            content = '<p>' + message + '</p>';\n        break;\n        case 'help':\n            modalTitle = '';\n            content = '<div class=\"test-help\">' + message.html() + '</div>';\n            break;\n        }\n\n    return ModalFactory.create({\n        type: ModalFactory.types.CANCEL,\n        body: content,\n        title: modalTitle\n    })\n    .then(function(modal) {\n\n        modal.setButtonText('cancel', 'Ok');\n\n        // When the dialog is closed, perform the callback (if provided).\n        modal.getRoot().on(ModalEvents.hidden, function() {\n            if (callback) {\n                callback();\n            }\n            modal.getRoot().remove();\n        });\n\n        modal.show();\n\n        return modal;\n    });\n};\n\n/**\n * Save the user answers.\n *\n * @param {Array} answers The answers of the user.\n * @param {string} sesskey The current sesskey.\n * @param {function} callback The callback function if the save is successful.\n * @returns {Promise} The promise of the AJAX call.\n * @throws {Error} If the AJAX call fails.\n */\nvar saveInfo = (answers, sesskey, callback = null) => {\n    answers = JSON.stringify(answers);\n    return Ajax.call([{\n        methodname: 'profilefield_learningstyles_save',\n        args: { \"answers\": answers, \"sesskey\": sesskey },\n        done: function(data) {\n            if (data) {\n                if (callback) {\n                    callback();\n                }\n            } else {\n                showMessage(s.errorsaving);\n            }\n        },\n        fail: function (e) {\n            showMessage(e.message);\n        }\n    }]);\n};\n\n/**\n * Calculate the affinity of each style.\n *\n * @param {string} maincontainer CSS selector of the main container.\n */\nvar drawResults = (maincontainer) => {\n    if (!maincontainer || maincontainer == '') {\n        maincontainer = defaultContainer;\n    }\n\n    var $maincontainer = $(maincontainer);\n    var $container = $maincontainer.find('.test-results');\n\n    calcAffinity($maincontainer);\n\n    questionStructure.forEach(group => {\n        let $bar = $container.find('[data-style=\"' + group.key + '\"] .bar');\n        let $indicator = $bar.find('> div');\n        let percent = (group.affinity + 11) * 100 / 22;\n        let barwidth = $bar.width();\n        let left = (barwidth - barwidth / 12) * percent / 100;\n        $indicator.css('left', left + 'px');\n\n        group.styles.forEach((style) => {\n            let affinity = Math.abs(group.affinity);\n            let level = affinity < 4 ? 3 : (affinity < 8 ? 2 : 1);\n\n            $maincontainer.find('.stylefeedback[data-style=\"' + style + '\"] [data-level=\"' + level + '\"]').show();\n        });\n    });\n};\n\n/**\n *\n * @param {string} maincontainer The CSS selector for the main container.\n * @returns {Array} The answers of the user.\n */\nvar getAnswers = (maincontainer) => {\n    if (!maincontainer || maincontainer == '') {\n        maincontainer = defaultContainer;\n    }\n\n    var $maincontainer = $(maincontainer);\n    var answers = [];\n\n    $maincontainer.find('.onepage[data-type=\"style\"]').each(function() {\n        let $stylepage = $(this);\n        let $checked = $stylepage.find('.questionoptions > .checked');\n        answers.push({\n            'index': $stylepage.data('index'),\n            'view': $checked.parents('.eachview').data('view'),\n            'value': $checked.find('button[data-type]').data('type')\n        });\n    });\n\n    return answers;\n};\n\n/**\n * Calc the user affinity with each style.\n *\n * @param {object} $maincontainer JQuery object of the main container.\n *\n */\nvar calcAffinity = ($maincontainer) => {\n    var answers = getAnswers($maincontainer);\n\n    questionStructure.forEach(group => {\n        var checkeda = 0;\n        var checkedb = 0;\n        group.questions.forEach(index => {\n            var answer = answers.find(item => item.index == index);\n\n            if (typeof answer !== 'undefined' && answer.value !== 'undefined') {\n                if (answer.value == 'a') {\n                    checkeda++;\n                } else {\n                    checkedb++;\n                }\n            }\n        });\n\n        group.affinity = checkedb - checkeda;\n    });\n\n};\n"],"names":["defaultContainer","questionStructure","strings","key","component","s","async","JSON","parse","structureJSON","forEach","one","then","results","pos","fail","e","debug","currentpage","currentview","$maincontainer","$progressinner","find","$toleft","$toright","$viewslistglobal","moving","$allpages","i","each","$thispage","this","push","hasClass","on","$button","$container","parents","type","data","removeClass","addClass","setTimeout","trigger","getCurrentPage","changeView","viewkey","hide","show","setBoard","$current","length","percent","css","drawResults","preventDefault","location","hash","action","isNaN","parseInt","answers","getAnswers","sesskey","saveInfo","showMessage","message","callback","modalTitle","content","info","html","ModalFactory","create","types","CANCEL","body","title","modal","setButtonText","getRoot","ModalEvents","hidden","remove","stringify","Ajax","call","methodname","args","done","errorsaving","maincontainer","calcAffinity","group","$bar","$indicator","affinity","barwidth","width","left","styles","style","Math","abs","level","$stylepage","$checked","checkeda","checkedb","questions","index","answer","item","value"],"mappings":"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"}